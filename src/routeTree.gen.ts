/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OurTeamImport } from './routes/our-team'
import { Route as ContactImport } from './routes/contact'
import { Route as ComingSoonImport } from './routes/coming-soon'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const WhatWeDoLazyImport = createFileRoute('/what-we-do')()
const OurClientsLazyImport = createFileRoute('/our-clients')()
const FaqPageLazyImport = createFileRoute('/faq-page')()

// Create/Update Routes

const WhatWeDoLazyRoute = WhatWeDoLazyImport.update({
  id: '/what-we-do',
  path: '/what-we-do',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/what-we-do.lazy').then((d) => d.Route))

const OurClientsLazyRoute = OurClientsLazyImport.update({
  id: '/our-clients',
  path: '/our-clients',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/our-clients.lazy').then((d) => d.Route))

const FaqPageLazyRoute = FaqPageLazyImport.update({
  id: '/faq-page',
  path: '/faq-page',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/faq-page.lazy').then((d) => d.Route))

const OurTeamRoute = OurTeamImport.update({
  id: '/our-team',
  path: '/our-team',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const ComingSoonRoute = ComingSoonImport.update({
  id: '/coming-soon',
  path: '/coming-soon',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/coming-soon': {
      id: '/coming-soon'
      path: '/coming-soon'
      fullPath: '/coming-soon'
      preLoaderRoute: typeof ComingSoonImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/our-team': {
      id: '/our-team'
      path: '/our-team'
      fullPath: '/our-team'
      preLoaderRoute: typeof OurTeamImport
      parentRoute: typeof rootRoute
    }
    '/faq-page': {
      id: '/faq-page'
      path: '/faq-page'
      fullPath: '/faq-page'
      preLoaderRoute: typeof FaqPageLazyImport
      parentRoute: typeof rootRoute
    }
    '/our-clients': {
      id: '/our-clients'
      path: '/our-clients'
      fullPath: '/our-clients'
      preLoaderRoute: typeof OurClientsLazyImport
      parentRoute: typeof rootRoute
    }
    '/what-we-do': {
      id: '/what-we-do'
      path: '/what-we-do'
      fullPath: '/what-we-do'
      preLoaderRoute: typeof WhatWeDoLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/coming-soon': typeof ComingSoonRoute
  '/contact': typeof ContactRoute
  '/our-team': typeof OurTeamRoute
  '/faq-page': typeof FaqPageLazyRoute
  '/our-clients': typeof OurClientsLazyRoute
  '/what-we-do': typeof WhatWeDoLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/coming-soon': typeof ComingSoonRoute
  '/contact': typeof ContactRoute
  '/our-team': typeof OurTeamRoute
  '/faq-page': typeof FaqPageLazyRoute
  '/our-clients': typeof OurClientsLazyRoute
  '/what-we-do': typeof WhatWeDoLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/coming-soon': typeof ComingSoonRoute
  '/contact': typeof ContactRoute
  '/our-team': typeof OurTeamRoute
  '/faq-page': typeof FaqPageLazyRoute
  '/our-clients': typeof OurClientsLazyRoute
  '/what-we-do': typeof WhatWeDoLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/coming-soon'
    | '/contact'
    | '/our-team'
    | '/faq-page'
    | '/our-clients'
    | '/what-we-do'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/coming-soon'
    | '/contact'
    | '/our-team'
    | '/faq-page'
    | '/our-clients'
    | '/what-we-do'
  id:
    | '__root__'
    | '/'
    | '/coming-soon'
    | '/contact'
    | '/our-team'
    | '/faq-page'
    | '/our-clients'
    | '/what-we-do'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ComingSoonRoute: typeof ComingSoonRoute
  ContactRoute: typeof ContactRoute
  OurTeamRoute: typeof OurTeamRoute
  FaqPageLazyRoute: typeof FaqPageLazyRoute
  OurClientsLazyRoute: typeof OurClientsLazyRoute
  WhatWeDoLazyRoute: typeof WhatWeDoLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ComingSoonRoute: ComingSoonRoute,
  ContactRoute: ContactRoute,
  OurTeamRoute: OurTeamRoute,
  FaqPageLazyRoute: FaqPageLazyRoute,
  OurClientsLazyRoute: OurClientsLazyRoute,
  WhatWeDoLazyRoute: WhatWeDoLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/coming-soon",
        "/contact",
        "/our-team",
        "/faq-page",
        "/our-clients",
        "/what-we-do"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/coming-soon": {
      "filePath": "coming-soon.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/our-team": {
      "filePath": "our-team.tsx"
    },
    "/faq-page": {
      "filePath": "faq-page.lazy.jsx"
    },
    "/our-clients": {
      "filePath": "our-clients.lazy.jsx"
    },
    "/what-we-do": {
      "filePath": "what-we-do.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
